# yaml-language-server: $schema=https://raw.githubusercontent.com/swarmlibs/dockerstack-schema/main/schema/dockerstack-spec.json
x-healthcheck: &x-healthcheck
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 30s

x-deploy: &x-deploy
  mode: global
  placement:
    constraints:
      - node.role == manager

x-default-logging: &x-default-logging
  options:
    max-size: "12m"
    max-file: "5"
  driver: json-file

services:
  prometheus-agent:
    image: ${PROMSTACK_PROMETHEUS_AGENT_VERSION}
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=agent
      - --storage.agent.path=/prometheus
      - --web.page-title=Promstack Prometheus - Docker Compose Support
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --log.level=info
    environment:
      NODE_ID: '{{.Node.ID}}'
      NODE_HOSTNAME: '{{.Node.Hostname}}'
      PROMETHEUS_AGENT_SCRAPE_INTERVAL: ${PROMETHEUS_AGENT_SCRAPE_INTERVAL:-10s}
      PROMETHEUS_AGENT_SCRAPE_TIMEOUT: ${PROMETHEUS_AGENT_SCRAPE_TIMEOUT:-5s}
      PROMETHEUS_AGENT_EVALUATION_INTERVAL: ${PROMETHEUS_AGENT_EVALUATION_INTERVAL:-1m}
    user: "0:0"
    ports:
      - published: 9091
        target: 9090
        mode: host
    networks:
      prometheus:
      prometheus_gwnetwork:
    hostname: '{{.Node.ID}}.promstack-compose-agent.internal'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    configs:
      - source: promstack-compose-support-agent-config
        target: /etc/prometheus/prometheus.yml
      - source: promstack-compose-support-agent-scrape-config
        target: /etc/prometheus/scrape-configs/prometheus.yaml
      - source: promstack-compose-support-agent-docker-compose
        target: /etc/prometheus/scrape-configs/docker-compose.yaml
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: volume
        source: prometheus-agent
        target: /prometheus
    healthcheck:
      <<: *x-healthcheck
      test: wget -qO - --tries=1 --spider http://127.0.0.1:9090/-/healthy || exit 1
    logging: *x-default-logging
    deploy:
      <<: *x-deploy
      labels:
        io.prometheus.role: "prometheus"
        io.prometheus.dockerswarm-tasks.should_be_scraped: "false"
        io.prometheus.dockerswarm-services.should_be_probed: "false"
      restart_policy:
        condition: any
        max_attempts: 15
        delay: 30s
        window: 15s
      rollback_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.1
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.1

networks:
  prometheus:
    name: prometheus
    external: true
  prometheus_gwnetwork:
    name: prometheus_gwnetwork
    external: true

volumes:
  prometheus-agent:

configs:
  # Prometheus config files
  promstack-compose-support-agent-config:
    name: promstack-compose-support-agent-config-v1
    file: ./prometheus-agent/prometheus-agent.yaml
    template_driver: golang

  # Prometheus agent's scrape config files
  promstack-compose-support-agent-scrape-config:
    name: promstack-compose-support-agent-scrape-config-v1
    file: ./prometheus-agent/scrape-configs/prometheus-agent.yaml
    template_driver: golang
  promstack-compose-support-agent-docker-compose:
    name: promstack-compose-support-agent-docker-compose-v1
    file: ./prometheus-agent/scrape-configs/docker-compose.yml
